"use strict";var __create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__commonJS=(e,t)=>function(){return t||(0,e[__getOwnPropNames(e)[0]])((t={exports:{}}).exports,t),t.exports},__export=(e,t)=>{for(var r in t)__defProp(e,r,{get:t[r],enumerable:!0})},__copyProps=(e,t,r,n)=>{if(t&&"object"===typeof t||"function"===typeof t)for(let o of __getOwnPropNames(t))__hasOwnProp.call(e,o)||o===r||__defProp(e,o,{get:()=>t[o],enumerable:!(n=__getOwnPropDesc(t,o))||n.enumerable});return e},__toESM=(e,t,r)=>(r=null!=e?__create(__getProtoOf(e)):{},__copyProps(!t&&e&&e.__esModule?r:__defProp(r,"default",{value:e,enumerable:!0}),e)),__toCommonJS=e=>__copyProps(__defProp({},"__esModule",{value:!0}),e),__accessCheck=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},__privateGet=(e,t,r)=>(__accessCheck(e,t,"read from private field"),r?r.call(e):t.get(e)),__privateAdd=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},__privateSet=(e,t,r,n)=>(__accessCheck(e,t,"write to private field"),n?n.call(e,r):t.set(e,r),r),require_canonicalize=__commonJS({"node_modules/canonicalize/lib/canonicalize.js"(e,t){t.exports=function e(t){if("number"===typeof t&&isNaN(t))throw new Error("NaN is not allowed");if("number"===typeof t&&!isFinite(t))throw new Error("Infinity is not allowed");if(null===t||"object"!==typeof t)return JSON.stringify(t);if(t.toJSON instanceof Function)return e(t.toJSON());if(Array.isArray(t)){return`[${t.reduce(((t,r,n)=>`${t}${0===n?"":","}${e(void 0===r||"symbol"===typeof r?null:r)}`),"")}]`}return`{${Object.keys(t).sort().reduce(((r,n)=>{if(void 0===t[n]||"symbol"===typeof t[n])return r;return`${r}${0===r.length?"":","}${e(n)}:${e(t[n])}`}),"")}}`}}}),src_exports={};__export(src_exports,{CID:()=>CID,Recap:()=>Recap,checkAtt:()=>checkAtt,decodeRecap:()=>decodeRecap,encodeRecap:()=>encodeRecap,isSorted:()=>isSorted,validAbString:()=>validAbString,validString:()=>validString}),module.exports=__toCommonJS(src_exports);var encode_1=encode,MSB=128,REST=127,MSBALL=~REST,INT=Math.pow(2,31);function encode(e,t,r){t=t||[];for(var n=r=r||0;e>=INT;)t[r++]=255&e|MSB,e/=128;for(;e&MSBALL;)t[r++]=255&e|MSB,e>>>=7;return t[r]=0|e,encode.bytes=r-n+1,t}var decode=read,MSB$1=128,REST$1=127;function read(e,t){var r,n=0,o=0,a=t=t||0,s=e.length;do{if(a>=s)throw read.bytes=0,new RangeError("Could not decode varint");r=e[a++],n+=o<28?(r&REST$1)<<o:(r&REST$1)*Math.pow(2,o),o+=7}while(r>=MSB$1);return read.bytes=a-t,n}var N1=Math.pow(2,7),N2=Math.pow(2,14),N3=Math.pow(2,21),N4=Math.pow(2,28),N5=Math.pow(2,35),N6=Math.pow(2,42),N7=Math.pow(2,49),N8=Math.pow(2,56),N9=Math.pow(2,63),length=function(e){return e<N1?1:e<N2?2:e<N3?3:e<N4?4:e<N5?5:e<N6?6:e<N7?7:e<N8?8:e<N9?9:10},varint={encode:encode_1,decode:decode,encodingLength:length},_brrp_varint=varint,varint_default=_brrp_varint,decode2=(e,t=0)=>[varint_default.decode(e,t),varint_default.decode.bytes],encodeTo=(e,t,r=0)=>(varint_default.encode(e,t,r),t),encodingLength=e=>varint_default.encodingLength(e),empty=new Uint8Array(0),equals=(e,t)=>{if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0},coerce=e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")},create=(e,t)=>{const r=t.byteLength,n=encodingLength(e),o=n+encodingLength(r),a=new Uint8Array(o+r);return encodeTo(e,a,0),encodeTo(r,a,n),a.set(t,o),new Digest(e,r,t,a)},decode3=e=>{const t=coerce(e),[r,n]=decode2(t),[o,a]=decode2(t.subarray(n)),s=t.subarray(n+a);if(s.byteLength!==o)throw new Error("Incorrect length");return new Digest(r,o,s,t)},equals2=(e,t)=>{if(e===t)return!0;{const r=t;return e.code===r.code&&e.size===r.size&&r.bytes instanceof Uint8Array&&equals(e.bytes,r.bytes)}},Digest=class{constructor(e,t,r,n){this.code=e,this.size=t,this.digest=r,this.bytes=n}};function base(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<e.length;o++){var a=e.charAt(o),s=a.charCodeAt(0);if(255!==r[s])throw new TypeError(a+" is ambiguous");r[s]=o}var i=e.length,c=e.charAt(0),d=Math.log(i)/Math.log(256),h=Math.log(256)/Math.log(i);function f(e){if("string"!==typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var n=0,o=0;e[t]===c;)n++,t++;for(var a=(e.length-t)*d+1>>>0,s=new Uint8Array(a);e[t];){var h=r[e.charCodeAt(t)];if(255===h)return;for(var f=0,p=a-1;(0!==h||f<o)&&-1!==p;p--,f++)h+=i*s[p]>>>0,s[p]=h%256>>>0,h=h/256>>>0;if(0!==h)throw new Error("Non-zero carry");o=f,t++}if(" "!==e[t]){for(var u=a-o;u!==a&&0===s[u];)u++;for(var l=new Uint8Array(n+(a-u)),b=n;u!==a;)l[b++]=s[u++];return l}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,n=0,o=0,a=t.length;o!==a&&0===t[o];)o++,r++;for(var s=(a-o)*h+1>>>0,d=new Uint8Array(s);o!==a;){for(var f=t[o],p=0,u=s-1;(0!==f||p<n)&&-1!==u;u--,p++)f+=256*d[u]>>>0,d[u]=f%i>>>0,f=f/i>>>0;if(0!==f)throw new Error("Non-zero carry");n=p,o++}for(var l=s-n;l!==s&&0===d[l];)l++;for(var b=c.repeat(r);l<s;++l)b+=e.charAt(d[l]);return b},decodeUnsafe:f,decode:function(e){var r=f(e);if(r)return r;throw new Error(`Non-${t} character`)}}}var _prf,_att,src=base,_brrp__multiformats_scope_baseX=src,base_x_default=_brrp__multiformats_scope_baseX,Encoder=class{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Decoder=class{constructor(e,t,r){if(this.name=e,this.prefix=t,void 0===t.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if("string"===typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return or(this,e)}},ComposedDecoder=class{constructor(e){this.decoders=e}or(e){return or(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},or=(e,t)=>new ComposedDecoder({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}}),Codec=class{constructor(e,t,r,n){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder(e,t,r),this.decoder=new Decoder(e,t,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},from=({name:e,prefix:t,encode:r,decode:n})=>new Codec(e,t,r,n),baseX=({prefix:e,name:t,alphabet:r})=>{const{encode:n,decode:o}=base_x_default(r,t);return from({prefix:e,name:t,encode:n,decode:e=>coerce(o(e))})},decode4=(e,t,r,n)=>{const o={};for(let h=0;h<t.length;++h)o[t[h]]=h;let a=e.length;for(;"="===e[a-1];)--a;const s=new Uint8Array(a*r/8|0);let i=0,c=0,d=0;for(let h=0;h<a;++h){const t=o[e[h]];if(void 0===t)throw new SyntaxError(`Non-${n} character`);c=c<<r|t,i+=r,i>=8&&(i-=8,s[d++]=255&c>>i)}if(i>=r||255&c<<8-i)throw new SyntaxError("Unexpected end of data");return s},encode2=(e,t,r)=>{const n="="===t[t.length-1],o=(1<<r)-1;let a="",s=0,i=0;for(let c=0;c<e.length;++c)for(i=i<<8|e[c],s+=8;s>r;)s-=r,a+=t[o&i>>s];if(s&&(a+=t[o&i<<r-s]),n)for(;a.length*r&7;)a+="=";return a},rfc4648=({name:e,prefix:t,bitsPerChar:r,alphabet:n})=>from({prefix:t,name:e,encode:e=>encode2(e,n,r),decode:t=>decode4(t,n,r,e)}),base58btc=baseX({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr=baseX({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base32=rfc4648({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper=rfc4648({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad=rfc4648({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper=rfc4648({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex=rfc4648({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper=rfc4648({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad=rfc4648({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper=rfc4648({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z=rfc4648({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),format=(e,t)=>{const{bytes:r,version:n}=e;return 0===n?toStringV0(r,baseCache(e),t||base58btc.encoder):toStringV1(r,baseCache(e),t||base32.encoder)},cache=new WeakMap,baseCache=e=>{const t=cache.get(e);if(null==t){const t=new Map;return cache.set(e,t),t}return t},CID=class{constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this["/"]=n}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:t}=this;if(e!==DAG_PB_CODE)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==SHA_256_CODE)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return CID.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=create(e,t);return CID.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return CID.equals(this,e)}static equals(e,t){const r=t;return r&&e.code===r.code&&e.version===r.version&&equals2(e.multihash,r.multihash)}toString(e){return format(this,e)}toJSON(){return{"/":format(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(null==e)return null;const t=e;if(t instanceof CID)return t;if(null!=t["/"]&&t["/"]===t.bytes||t.asCID===t){const{version:e,code:r,multihash:n,bytes:o}=t;return new CID(e,r,n,o||encodeCID(e,r,n.bytes))}if(!0===t[cidSymbol]){const{version:e,multihash:r,code:n}=t,o=decode3(r);return CID.create(e,n,o)}return null}static create(e,t,r){if("number"!==typeof t)throw new Error("String codecs are no longer supported");if(!(r.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:if(t!==DAG_PB_CODE)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);return new CID(e,t,r,r.bytes);case 1:{const n=encodeCID(e,t,r.bytes);return new CID(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return CID.create(0,DAG_PB_CODE,e)}static createV1(e,t){return CID.create(1,e,t)}static decode(e){const[t,r]=CID.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=CID.inspectBytes(e),r=t.size-t.multihashSize,n=coerce(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");const o=n.subarray(t.multihashSize-t.digestSize),a=new Digest(t.multihashCode,t.digestSize,o,n);return[0===t.version?CID.createV0(a):CID.createV1(t.codec,a),e.subarray(t.size)]}static inspectBytes(e){let t=0;const r=()=>{const[r,n]=decode2(e.subarray(t));return t+=n,r};let n=r(),o=DAG_PB_CODE;if(18===n?(n=0,t=0):o=r(),0!==n&&1!==n)throw new RangeError(`Invalid CID version ${n}`);const a=t,s=r(),i=r(),c=t+i;return{version:n,codec:o,multihashCode:s,digestSize:i,multihashSize:c-a,size:c}}static parse(e,t){const[r,n]=parseCIDtoBytes(e,t),o=CID.decode(n);if(0===o.version&&"Q"!==e[0])throw Error("Version 0 CID string must not include multibase prefix");return baseCache(o).set(r,e),o}},parseCIDtoBytes=(e,t)=>{switch(e[0]){case"Q":{const r=t||base58btc;return[base58btc.prefix,r.decode(`${base58btc.prefix}${e}`)]}case base58btc.prefix:{const r=t||base58btc;return[base58btc.prefix,r.decode(e)]}case base32.prefix:{const r=t||base32;return[base32.prefix,r.decode(e)]}default:if(null==t)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}},toStringV0=(e,t,r)=>{const{prefix:n}=r;if(n!==base58btc.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=t.get(n);if(null==o){const o=r.encode(e).slice(1);return t.set(n,o),o}return o},toStringV1=(e,t,r)=>{const{prefix:n}=r,o=t.get(n);if(null==o){const o=r.encode(e);return t.set(n,o),o}return o},DAG_PB_CODE=112,SHA_256_CODE=18,encodeCID=(e,t,r)=>{const n=encodingLength(e),o=n+encodingLength(t),a=new Uint8Array(o+r.byteLength);return encodeTo(e,a,0),encodeTo(t,a,n),a.set(r,o),a},cidSymbol=Symbol.for("@ipld/js-cid/CID"),base64=rfc4648({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad=rfc4648({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url=rfc4648({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad=rfc4648({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),import_canonicalize=__toESM(require_canonicalize(),1),stringRegex=/^[a-zA-Z0-9.*_+-]+$/g,abilityStringRegex=/^[a-zA-Z0-9.*_+-]+\/[a-zA-Z0-9.*_+-]+$/g,validString=e=>null!==e.match(stringRegex),validAbString=e=>null!==e.match(abilityStringRegex),encodeRecap=(e,t)=>base64url.encoder.baseEncode((new TextEncoder).encode((0,import_canonicalize.default)({att:e,prf:t.map((e=>e.toV1().toString(base58btc.encoder)))}))),decodeRecap=e=>{const{att:t,prf:r}=JSON.parse((new TextDecoder).decode(base64url.decoder.baseDecode(e)));if(!(t instanceof Object)||Array.isArray(t))throw new Error("Invalid attenuation object");if(!Array.isArray(r)||r.some((e=>"string"!==typeof e)))throw new Error("Invalid proof list");if(checkAtt(t),!isSorted(t))throw new Error("Attenuation object is not properly sorted");return{att:t,prf:r.map((e=>CID.parse(e,base58btc)))}},checkAtt=e=>{for(const t of Object.values(e)){if(!(t instanceof Object))throw new Error("Invalid attenuation object");for(const[e,r]of Object.entries(t)){if(!validAbString(e))throw new Error(`Invalid ability string: ${e}`);if(!Array.isArray(r)||r.some((e=>!(e instanceof Object)||Array.isArray(e))))throw new Error(`Invalid nota-bene list for ${e}`)}}return!0},isSorted=e=>{if(Array.isArray(e))return e.every(isSorted);if(e instanceof Object){const t=Object.keys(e);return Object.keys(e).sort().every(((e,r)=>e===t[r]))&&Object.values(e).every(isSorted)}return!0},urnRecapPrefix="urn:recap:",_Recap=class{constructor(e={},t=[]){__privateAdd(this,_prf,void 0),__privateAdd(this,_att,void 0),checkAtt(e),__privateSet(this,_att,e),__privateSet(this,_prf,t.map((e=>"string"===typeof e?CID.parse(e):e)))}get proofs(){return __privateGet(this,_prf)}get attenuations(){return __privateGet(this,_att)}get statement(){let e="I further authorize the stated URI to perform the following actions on my behalf: ",t=1;for(const r of Object.keys(this.attenuations).sort()){const n=Object.keys(this.attenuations[r]).sort().reduce(((e,t)=>{const[r,n]=t.split("/");return void 0===e[r]?e[r]=[n]:e[r].push(n),e}),{});for(const[o,a]of Object.entries(n))e+=`(${t}) '${o}': ${a.map((e=>`'${e}'`)).join(", ")} for '${r}'. `,t+=1}return e=e.slice(0,-1),e}addProof(e){"string"===typeof e?__privateGet(this,_prf).push(CID.parse(e)):__privateGet(this,_prf).push(e)}addAttenuation(e,t="*",r="*",n={}){if(!validString(t))throw new Error("Invalid ability namespace");if(!validString(r))throw new Error("Invalid ability name");const o=`${t}/${r}`,a=__privateGet(this,_att)[e];void 0!==a?void 0!==a[o]?a[o].push(n):a[o]=[n]:__privateGet(this,_att)[e]={[o]:[n]}}merge(e){__privateGet(this,_prf).push(...e.proofs.filter((e=>!__privateGet(this,_prf).includes(e))));for(const[t,r]of Object.entries(e.attenuations))if(void 0!==__privateGet(this,_att)[t]){const e=__privateGet(this,_att)[t];for(const[t,n]of Object.entries(r))void 0===e[t]||0===e[t].length||e[t].every((e=>0===Object.keys(e).length))?e[t]=n:e[t].push(...n)}else __privateGet(this,_att)[t]=r}static decode_urn(e){if(!e.startsWith(urnRecapPrefix))throw new Error("Invalid recap urn");const{att:t,prf:r}=decodeRecap(e.slice(urnRecapPrefix.length));return new _Recap(t,r)}static extract(e){if(void 0===e.resources)throw new Error("No resources in SiweMessage");const t=e.resources.length-1;return _Recap.decode_urn(e.resources[t])}static extract_and_verify(e){const t=_Recap.extract(e);if(void 0===e.statement||!e.statement.endsWith(t.statement))throw new Error("Invalid statement");return t}add_to_siwe_message(e){try{if(void 0===e.statement||void 0===e.resources||0===e.resources.length)throw new Error("no recap");const t=_Recap.extract_and_verify(e),r=t.statement;return t.merge(this),e.statement=e.statement.slice(0,-r.length)+t.statement,e.resources[e.resources.length-1]=t.encode(),e}catch(t){return e.statement=void 0===e.statement?this.statement:e.statement+" "+this.statement,e.resources=void 0===e.resources?[this.encode()]:[...e.resources,this.encode()],e}}encode(){return`${urnRecapPrefix}${encodeRecap(__privateGet(this,_att),__privateGet(this,_prf))}`}},Recap=_Recap;_prf=new WeakMap,_att=new WeakMap;